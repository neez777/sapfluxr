% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualisation_core.R
\name{plot_diagnostics}
\alias{plot_diagnostics}
\title{Create Diagnostic Plots}
\usage{
plot_diagnostics(
  vh_results,
  sap_data = NULL,
  diagnostic_type = "quality_overview",
  methods = NULL,
  sensors = "all",
  time_window = NULL,
  combine_plots = TRUE,
  interactive = FALSE,
  theme_options = NULL
)
}
\arguments{
\item{vh_results}{A vh_results object from calc_heat_pulse_velocity()}

\item{sap_data}{Optional sap_data object for additional diagnostics (default: NULL)}

\item{diagnostic_type}{Character string: "quality_overview", "sensor_performance", "method_diagnostics", "temporal_patterns", "distribution_analysis" (default: "quality_overview")}

\item{methods}{Character vector of methods to analyse (default: NULL for all methods)}

\item{sensors}{Character vector of sensor positions (default: "all")}

\item{time_window}{Optional time window for analysis (default: NULL)}

\item{combine_plots}{Logical whether to combine multiple diagnostic plots into one figure (default: TRUE)}

\item{interactive}{Logical whether to create interactive plots (default: FALSE)}

\item{theme_options}{List of theme options (default: NULL)}
}
\value{
A ggplot2 object, list of plots, or plotly object
}
\description{
Generate comprehensive diagnostic plots for data quality assessment,
sensor performance evaluation, and method validation.
}
\examples{
\dontrun{
# Quality overview
plot_diagnostics(vh_results, diagnostic_type = "quality_overview")

# Sensor performance analysis
plot_diagnostics(vh_results, sap_data, diagnostic_type = "sensor_performance")

# Method diagnostics
plot_diagnostics(vh_results, diagnostic_type = "method_diagnostics")

# Combined diagnostic dashboard
plot_diagnostics(vh_results, diagnostic_type = "quality_overview", combine_plots = TRUE)
}

}
