% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{plot_sdma_timeseries}
\alias{plot_sdma_timeseries}
\title{Plot Selectable DMA (sDMA) Time Series with Dual Y-Axes}
\usage{
plot_sdma_timeseries(
  vh_results,
  sdma_method = NULL,
  start_date = NULL,
  end_date = NULL,
  sensor_position = "outer",
  quality_filter = TRUE,
  show_peclet = TRUE
)
}
\arguments{
\item{vh_results}{Results tibble from calc_heat_pulse_velocity()}

\item{sdma_method}{Name of the sDMA method to plot (e.g., "sDMA:MHR").
If NULL and only one sDMA method exists, uses that one. If NULL and multiple
sDMA methods exist, prompts user interactively. Default: NULL}

\item{start_date}{Start date/datetime (POSIXct) or numeric day number.
If NULL, uses data start. Default: NULL}

\item{end_date}{End date/datetime (POSIXct) or numeric (days to plot from start).
If NULL, uses data end. Default: NULL}

\item{sensor_position}{Sensor position to plot: "inner" or "outer". Default: "outer"}

\item{quality_filter}{Logical indicating whether to filter to "OK" quality only.
Default: TRUE}

\item{show_peclet}{Logical indicating whether to show Peclet number on secondary
y-axis. Default: TRUE}
}
\value{
A ggplot2 object
}
\description{
Creates a time series plot of sDMA velocity results with points colored by
the selected method (HRM vs secondary), and optionally shows Peclet number
on a secondary y-axis.
}
\examples{
\dontrun{
# Calculate sDMA results
heat_pulse_data <- read_heat_pulse_data("data.txt")
results <- calc_heat_pulse_velocity(heat_pulse_data, methods = c("sDMA:MHR"))

# Plot sDMA with Peclet number
plot_sdma_timeseries(results)

# Plot without Peclet number
plot_sdma_timeseries(results, show_peclet = FALSE)

# Specify date range
plot_sdma_timeseries(results,
                     start_date = as.POSIXct("2025-09-11"),
                     end_date = as.POSIXct("2025-09-18"))

# Compare two sDMA methods
results <- calc_heat_pulse_velocity(heat_pulse_data,
                                     methods = c("sDMA:MHR", "sDMA:Tmax_Klu"))
plot_sdma_timeseries(results, sdma_method = "sDMA:MHR")
plot_sdma_timeseries(results, sdma_method = "sDMA:Tmax_Klu")
}

}
