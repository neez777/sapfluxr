% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01a_data_import.R
\name{fix_clock_drift}
\alias{fix_clock_drift}
\title{Fix Clock Drift in Device-Collected Data}
\usage{
fix_clock_drift(
  data,
  device_time_col = "datetime",
  observed_device_time,
  observed_actual_time
)
}
\arguments{
\item{data}{A data frame containing the raw data}

\item{device_time_col}{Character string naming the column containing device
timestamps (default: "datetime")}

\item{observed_device_time}{POSIXct timestamp showing what the device clock
displayed at calibration point}

\item{observed_actual_time}{POSIXct timestamp showing the actual correct time
at calibration point}
}
\value{
The input data frame with:
\itemize{
\item Original timestamps preserved in \code{device_datetime} column
\item Corrected timestamps in the original \code{device_time_col} column
\item Correction metadata stored as attributes on the corrected column
}
}
\description{
Corrects clock drift in device-collected data by applying a linear correction
based on a single calibration point observed when the device is connected to
a laptop or known accurate time source.
}
\details{
This function assumes that:
\itemize{
\item The device clock was accurate at the start of the dataset
\item Clock drift accumulated linearly over time
\item A single calibration point is available (observed when connecting device)
}

The correction is calculated as:
\deqn{corrected\_time = device\_time + (drift \times proportion\_elapsed)}

Where \code{drift} is the total drift at calibration, and \code{proportion_elapsed}
is the fraction of time elapsed from dataset start to each measurement.

\strong{Important:} Original device timestamps are preserved in a new column called
\code{device_datetime} so you can always revert the correction if needed.
}
\section{Attributes}{

The corrected timestamp column will have the following attributes:
\describe{
\item{drift_corrected}{Logical TRUE indicating correction was applied}
\item{total_drift_seconds}{Numeric total drift in seconds at calibration}
\item{calibration_date}{POSIXct actual time at calibration}
}
}

\section{Warnings}{

\itemize{
\item If correction has already been applied, the function returns data
unchanged with a warning
\item If any timestamps are later than the calibration point, a warning is
issued that correction is being extrapolated
}
}

\examples{
\dontrun{
# Create example data with clock drift
# Device clock was 5 minutes fast by the end of a 24-hour period
start_time <- as.POSIXct("2025-01-15 08:00:00", tz = "UTC")
device_times <- seq(start_time, by = "30 min", length.out = 48)

# Add simulated drift (5 minutes over 24 hours)
drift_per_hour <- 5 / 24  # minutes per hour
hours_elapsed <- seq(0, 23.5, by = 0.5)
drift_minutes <- hours_elapsed * drift_per_hour
device_times_with_drift <- device_times + drift_minutes * 60  # Convert to seconds

example_data <- data.frame(
  datetime = device_times_with_drift,
  temperature = rnorm(48, mean = 25, sd = 2)
)

# At 24 hours, we connected the device and observed:
# Device showed: 2025-01-16 08:05:00
# Actual time was: 2025-01-16 08:00:00
observed_device <- as.POSIXct("2025-01-16 08:05:00", tz = "UTC")
observed_actual <- as.POSIXct("2025-01-16 08:00:00", tz = "UTC")

# Apply correction
corrected_data <- fix_clock_drift(
  data = example_data,
  device_time_col = "datetime",
  observed_device_time = observed_device,
  observed_actual_time = observed_actual
)

# Check correction
head(corrected_data)
attributes(corrected_data$datetime)

# Original device times are preserved
head(corrected_data$device_datetime)
}

}
\concept{data preprocessing functions}
