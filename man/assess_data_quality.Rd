% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/14_processing_pipeline.R
\name{assess_data_quality}
\alias{assess_data_quality}
\title{Assess Data Quality for Sap Flow Analysis}
\usage{
assess_data_quality(sap_data, probe_config, detailed = TRUE)
}
\arguments{
\item{sap_data}{Sap flow data object from read_sap_data()}

\item{probe_config}{Probe configuration object from detect_probe_config()}

\item{detailed}{Logical, whether to return detailed diagnostic information (default TRUE)}
}
\value{
List containing:
\describe{
\item{overall_score}{Overall quality score (0-100)}
\item{component_scores}{Individual component quality scores}
\item{issues}{List of identified quality issues}
\item{recommendations}{Quality-based recommendations}
\item{diagnostics}{Detailed diagnostic information if requested}
}
}
\description{
Comprehensive data quality assessment that evaluates multiple aspects
of sap flow data quality and provides recommendations for analysis.
This complements the existing validate_sap_data() function with more
detailed quality metrics.
}
\details{
Quality assessment components:
\itemize{
\item \strong{Temporal consistency}: Regular measurement intervals, no large gaps
\item \strong{Sensor functionality}: All required sensors present and responsive
\item \strong{Temperature stability}: Baseline temperature stability
\item \strong{Heat pulse response}: Clear temperature response to heat pulses
\item \strong{Data completeness}: Minimal missing or invalid values
\item \strong{Measurement precision}: Consistent and precise measurements
}
}
\examples{
\dontrun{
probe_config <- detect_probe_config(sap_data)
quality <- assess_data_quality(sap_data, probe_config)
print(quality$overall_score)
print(quality$recommendations)
}

}
\seealso{
\code{\link{validate_sap_data}}, \code{\link{process_sap_data}}
}
